/**
 * @version: 1.1330-20190603
 */

[Ripple] {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

[Ripple] > * {
  pointer-events: none;
}

[Ripple]::before,
[Ripple]::after {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.06);
  opacity: 0;
  pointer-events: none;
  content: '';
}

[Ripple]::before {
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
}

[Ripple]::after {
  /* 使 :after 位于元素左上部分，中点与元素左上点重合 */
  top: calc(var(--ripple-diameter) / -2);
  left: calc(var(--ripple-diameter) / -2);
  width: var(--ripple-diameter, 60px);
  height: var(--ripple-diameter, 60px);
  transform: translate(var(--ripple-center, 0));
  transform-origin: center center;
  border-radius: 50%;
}

[Ripple]:hover::before,
[Ripple]:hover::after {
  will-change: opacity, transform;
}

[Ripple].ripple-running::before {
  opacity: 1;
  animation: 83ms ripple-opacity-in forwards;
}

[Ripple].ripple-running::after {
  opacity: 1;
  animation: 300ms ripple-running forwards, 83ms opacity-in forwards;
}

[Ripple].ripple-ended::before,
[Ripple].ripple-ended::after {
  transform: translate(var(--ripple-center, 0)) scale(var(--ripple-scale, 1));
  animation: 83ms ripple-opacity-out forwards;
}

@keyframes ripple-running {
  from {
    transform: translate(var(--ripple-kiss-point, 0)) scale(1);
    animation-timing-function: cubic-bezier(.4, 0, .2, 1);
  }

  to {
    transform: translate(var(--ripple-center, 0)) scale(var(--ripple-scale, 1));
  }
}

@keyframes ripple-opacity-in {
  from {
    opacity: 0;
    animation-timing-function: linear;
  }

  to {
    opacity: 1;
  }
}

@keyframes ripple-opacity-out {
  from {
    opacity: 1;
    animation-timing-function: linear;
  }

  to {
    opacity: 0;
  }
}
